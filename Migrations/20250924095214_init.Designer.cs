// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using gozba_na_klik.Data;

#nullable disable

namespace gozba_na_klik.Migrations
{
    [DbContext(typeof(GozbaDbContext))]
    [Migration("20250924095214_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("gozba_na_klik.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("gozba_na_klik.Model.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Allergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gluten"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Peanuts"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lactose"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Soy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Nuts"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Shellfish"
                        });
                });

            modelBuilder.Entity("gozba_na_klik.Model.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("gozba_na_klik.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@gozba.com",
                            FirstName = "Admin",
                            LastName = "One",
                            Password = "admin123",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "admin2@gozba.com",
                            FirstName = "Admin",
                            LastName = "Two",
                            Password = "admin123",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin3@gozba.com",
                            FirstName = "Admin",
                            LastName = "Three",
                            Password = "admin123",
                            Role = 0
                        });
                });

            modelBuilder.Entity("gozba_na_klik.Model.UserAllergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergenId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AllergenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAllergen");
                });

            modelBuilder.Entity("gozba_na_klik.Model.WorkTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkTimes");
                });

            modelBuilder.Entity("gozba_na_klik.Model.Address", b =>
                {
                    b.HasOne("gozba_na_klik.Model.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("gozba_na_klik.Model.Restaurant", b =>
                {
                    b.HasOne("gozba_na_klik.Model.User", "Owner")
                        .WithMany("Restaurants")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("gozba_na_klik.Model.UserAllergen", b =>
                {
                    b.HasOne("gozba_na_klik.Model.Allergen", "Allergen")
                        .WithMany("UserAllergens")
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gozba_na_klik.Model.User", "User")
                        .WithMany("UserAllergens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("User");
                });

            modelBuilder.Entity("gozba_na_klik.Model.WorkTime", b =>
                {
                    b.HasOne("gozba_na_klik.Model.User", "User")
                        .WithMany("WorkTimes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("gozba_na_klik.Model.Allergen", b =>
                {
                    b.Navigation("UserAllergens");
                });

            modelBuilder.Entity("gozba_na_klik.Model.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Restaurants");

                    b.Navigation("UserAllergens");

                    b.Navigation("WorkTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
